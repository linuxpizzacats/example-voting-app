pipeline {
    agent {
      docker {
        image 'maven:3.6.1-jdk-8-alpine'
        args '-v $HOME/.m2:/root/.m2'
      }
    }
    stages {
        stage('build') {
            when {
              changeset '**/worker/**'
            }
            steps {
                echo 'Compiler worker'
                dir('worker') {
                  sh 'mvn compile'
                }
            }
        }
        stage('test') {
            when {
              changeset '**/worker/**'
            }
            steps {
                echo 'Running unit test on worker app'
                dir('worker') {
                  sh 'mvn clean test'
                }
            }
        }
        stage('package') {
            when {
              branch 'master'
              changeset '**/worker/**'
            }
            steps {
                echo 'Package worker app'
                dir('worker') {
                  sh 'mvn package -DskipTests'
                  archiveArtifacts artifacts: '**/target/*.jar', fingerprint: true
                }
            }
        }
        stage('docker-package') {
            when {
              branch 'master'
              changeset '**/worker/**'
            }
            steps {
                echo 'Package worker app with docker'
                script {
                  docker.withRegistry("https://index.docker.io/v1","dockerlogin")
                  def workerImage = docker.build("linuxpizzacats/worker:v${env.BUILD_ID}","./worker")
                  workerImage.push()
                  workerImage.push("${env.BRANCH_NAME}")
                }
            }
        }
    }
    post{
        always{
	    slackSend (channel: "lfs261", message: "Build Started - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
            echo 'Pipeline for worker app has finished.'
        }
	failure{
	    slackSend (channel: "lfs261", message: "Build Failed - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
	}
	success{
	    slackSend (channel: "lfs261", message: "Build Success - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
	}
    }
}
